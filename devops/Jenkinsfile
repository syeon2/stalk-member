pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'waterkite94/stalk-member'
        DOCKERFILE_PATH = './devops/Dockerfile'
    }

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', credentialsId: 'github_webhook_token',
                url: 'https://github.com/syeon2/stalk-member.git'
            }
        }

        stage('Build Project') {
            steps {
                sh "./gradlew clean bootstrap:build"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerfilePath = "${env.WORKSPACE}/${DOCKERFILE_PATH}"
                    def buildArgs = "--build-arg ENCRYPT_PASSWORD=${env.ENCRYPT_PASSWORD}"

                    sh "docker build -f ${dockerfilePath} -t ${DOCKER_IMAGE} ${buildArgs} ${env.WORKSPACE}"
                }
            }
        }

        stage('Publish Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_hub_access_token') {
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }

        stage('Transfer ansible file & Execute ansible file') {
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'stalk-ansible',
                            transfers: [
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: './playbooks',
                                    remoteDirectorySDF: false,
                                    removePrefix: 'devops',
                                    sourceFiles: 'devops/ansible-stalk-member.yml'
                                ),
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: 'ansible-playbook playbooks/ansible-stalk-member.yml',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: '.',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: ''
                                )
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: false
                        )
                    ]
                )
            }
        }

        stage('openapi3 build') {
                    steps {
                        sh "./gradlew openapi3"
                    }
                }

        stage('Transfer document file & Execute swagger ui') {
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'joypple22-raspi',
                            transfers: [
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: './stalk-documents',
                                    remoteDirectorySDF: false,
                                    removePrefix: 'presentation/build/docs',
                                    sourceFiles: 'presentation/build/docs/member-service.json'
                                ),
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '''
                                        docker stop stalk-document
                                    ''',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: '',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: ''
                                ),
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '''
                                        docker rm stalk-document
                                    ''',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: '',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: ''
                                ),
                                sshTransfer(
                                    cleanRemote: false,
                                    excludes: '',
                                    execCommand: '''
                                        docker run -d -p 8081:8080 -e URLS='[{"url":"docs/activity-service.json", "name":"stalk-activity"}, {"url":"docs/member-service.json", "name":"stalk-member"}]' \
                                        -v ./stalk-documents:/usr/share/nginx/html/docs/ --network stalk-network --name stalk-document \
                                        swaggerapi/swagger-ui
                                    ''',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: '',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: ''
                                )
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: false
                        )
                    ]
                )
            }
        }
    }

    post {
        always {
            cleanWs()
        }

        failure {
            echo 'The build has failed.'
        }

        success {
            echo 'The build has succeeded.'
        }
    }
}
